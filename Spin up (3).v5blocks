{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"g2-x4D;[==$)3PQV2/oi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">Screen</variable><variable type=\"\" id=\"~.!lUub8K2.o4{31gFx6\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">spd</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"550\" y=\"170\"><next><block type=\"v5_motion_set_motor_velocity\" id=\"?RC3opZGO-vYK,MP^yLm\"><field name=\"MOTOR\">Roller</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"_a))Ny5*IS`:KASEZ1JM\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"v5_control_forever\" id=\"pYIBpj=pb1sM)~)m;_Lf\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_elseif_else\" id=\"yO(s#}kn..]3v({)R*pV\"><mutation branches=\"3\"></mutation><field name=\"BRANCH_BLANK\">node_modules/@rm-vca/blockly/media/../../../../static/img/ui_imgs/elseif_blank.png</field><field name=\"BRANCH_REMOVE\">node_modules/@rm-vca/blockly/media/../../../../static/img/ui_imgs/elseif_remove.png</field><field name=\"BRANCH_ADD\">node_modules/@rm-vca/blockly/media/../../../../static/img/ui_imgs/elseif_add.png</field><value name=\"CONDITION1\"><block type=\"v5_operator_and\" id=\"{X!d!wQ9;j7Qo1Uv~j;e\"><value name=\"OPERAND1\"><block type=\"v5_sensing_pressing_controller\" id=\"s;pd_;|BpvD^TsIrF(6U\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value><value name=\"OPERAND2\"><block type=\"v5_sensing_pressing_controller\" id=\"_(eehi7NSIajMW|2_O8d\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value></block></value><statement name=\"SUBSTACK1\"><block type=\"v5_motion_set_motor_velocity\" id=\"661:QdvJB^#84-8pLy-Z\"><field name=\"MOTOR\">Roller</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"x490T@sz|)?HMaER_s9n\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"%T7F^I%N{!aV(oq$5G^?\"><field name=\"MOTOR\">Roller</field><field name=\"DIRECTION\">fwd</field></block></next></block></statement><value name=\"CONDITION2\"><block type=\"v5_sensing_pressing_controller\" id=\"G(1xZaa0JeRxXD}OOSO.\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value><statement name=\"SUBSTACK2\"><block type=\"v5_motion_set_motor_velocity\" id=\"fO=WP!Z#}d_WeM)LwVpR\"><field name=\"MOTOR\">Roller</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"5AmA(]4CX7+0L^^wKg!U\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"FOyErbhcV?;3NeWW`MYf\"><field name=\"MOTOR\">Roller</field><field name=\"DIRECTION\">fwd</field></block></next></block></statement><value name=\"CONDITION3\"><block type=\"v5_sensing_pressing_controller\" id=\"XWJ$s%m6hcqKLM=pZ,nb\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value><statement name=\"SUBSTACK3\"><block type=\"v5_motion_set_motor_velocity\" id=\"Y=);5u(pUznaV6p{bURC\"><field name=\"MOTOR\">Roller</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"H*[N!klzTrAD7Gf!ud:A\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"WyJaS#EG]lM^]y+q$jiB\"><field name=\"MOTOR\">Roller</field><field name=\"DIRECTION\">rev</field></block></next></block></statement><statement name=\"SUBSTACK_ELSE\"><block type=\"v5_motion_stop_motor\" id=\"h$j;Jot`twf6shMWKlZy\"><field name=\"MOTOR\">Roller</field></block></statement></block></statement></block></next></block></next></block><block type=\"v5_events_when_started\" id=\"BzkFJK/5`wczUaBjkUbS\" x=\"1890\" y=\"450\"><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"7l6X)|@T/,iE6P;Tn%:M\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"$%fN2[?I8fO|.?-Tzym.\"><field name=\"NUM\">50</field></shadow></value></block></next></block><block type=\"v5_events_when_controller_button\" id=\"49+XZ9=FuPD|}Q_412wS\" x=\"2270\" y=\"490\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonY</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"HYLQHUmHMhxIdXzGdSh5\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"5N8+6LY@_[!O?cg/.}QH\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"@_A/?#adXlXgYxAM?X.5\"><field name=\"VARIABLE\" id=\"~.!lUub8K2.o4{31gFx6\" variabletype=\"\">spd</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"sza{}ElxpNPz/;*yl8Xl\"><field name=\"NUM\">100</field></shadow></value></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"(^WvxzM8ThW@S9orA}Xb\" x=\"2230\" y=\"730\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonX</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"(jmbqzbs0s4LUXJ|b|5L\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"5~(i,i5ffza?3z,TCF7p\"><field name=\"NUM\">70</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"uGNdSgK:g][#?MmG7qz_\"><field name=\"VARIABLE\" id=\"~.!lUub8K2.o4{31gFx6\" variabletype=\"\">spd</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"v^ql3r8c73K7`fQzqLq-\"><field name=\"NUM\">70</field></shadow></value></block></next></block></next></block><block type=\"v5_events_when_started\" id=\"_o%23#{Xw.Pt%IDXc%7S\" x=\"630\" y=\"950\"><next><block type=\"v5_variables_set_variable\" id=\"zM/Pq)sY)brY7Ql~p?p`\"><field name=\"VARIABLE\" id=\"g2-x4D;[==$)3PQV2/oi\" variabletype=\"\">Screen</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"5v0qwKu@eiypL+Cp,h-V\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_control_forever\" id=\"t3gTk)Ezi}ylTpgUvco2\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then_else\" id=\"m._$[z?WS[W,]!V(f;dx\"><value name=\"CONDITION\"><block type=\"v5_operator_equal_to\" id=\"}O^uUJrRKYEYqt/J@^cW\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\".zgpe3L3i23,]u,GVDh6\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"/5MMzi9N~.jrugUv5Gqk\"><field name=\"VARIABLE\" id=\"g2-x4D;[==$)3PQV2/oi\" variabletype=\"\">Screen</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"H^EKi3;{~Uq2Krx)?61~\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_clear_all_rows\" id=\"pJrGQr8@a$02f(+9y2%L\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_clear_all_rows\" id=\"q+cXeukcj1g[Y(!SZ!)s\"><field name=\"TARGET\">Controller1</field><next><block type=\"v5_looks_print\" id=\"qC4k(r`JtWHg+4*{f)5o\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"N|k@Z[j{O.U7..dCky/$\"><field name=\"TEXT\">Drive speed: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"[F7@%6Ql8RkosFjg-V)R\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"?On7wiKblSnNc?Ku2RO_\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_variables_variable\" id=\"9/2*/HSy7s7zD3W1z@TJ\"><field name=\"VARIABLE\" id=\"~.!lUub8K2.o4{31gFx6\" variabletype=\"\">spd</field></block></value><next><block type=\"v5_looks_next_row\" id=\"U)AS/sL_7RS*C3C!(L0s\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"OEM0p#LtbZ]Wz2o]U%=H\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"?:@ej1DT.-bq@xGO%!H?\"><field name=\"TEXT\">Drive speed: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"V{.dh!vDtJU:z},wvV?u\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"Ztkl%5l(uKseIH9}T*=R\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_variables_variable\" id=\"a_Vw;Z[ZJ5JaM47D]|#e\"><field name=\"VARIABLE\" id=\"~.!lUub8K2.o4{31gFx6\" variabletype=\"\">spd</field></block></value><next><block type=\"v5_looks_next_row\" id=\"LA3+~q:t_y+yo!8K8|QU\"><field name=\"TARGET\">Controller1</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_looks_clear_all_rows\" id=\",f5na!V?6Nc]254Ke`)(\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\".(J@`h^RUt?w#-WsWT23\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"#IV/xn.3PUI1107;Q@[I\"><field name=\"TEXT\">Screen off</field></shadow></value><next><block type=\"v5_looks_next_row\" id=\"zo=Zk}|n)w?*[#%UL)TF\"><field name=\"TARGET\">Controller1</field><next><block type=\"v5_looks_print\" id=\"c={B9PQ/NDptLgxvs*%5\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"3btv!68aQc~}:JN{SCuO\"><field name=\"TEXT\">Screen off</field></shadow></value><next><block type=\"v5_looks_next_row\" id=\"w*tEV9-(NQ`M?lie(`Mq\"><field name=\"TARGET\">Brain</field></block></next></block></next></block></next></block></next></block></statement></block></statement></block></next></block></next></block></xml>","rconfig":[{"port":[1,12],"name":"Roller","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[20,11,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"true","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor RollerMotorA = motor(PORT1, ratio18_1, true);\nmotor RollerMotorB = motor(PORT12, ratio18_1, true);\nmotor_group Roller = motor_group(RollerMotorA, RollerMotorB);\n\nmotor LeftDriveSmart = motor(PORT20, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT11, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3 + Axis1\n      // right = Axis3 - Axis1\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position() + Controller1.Axis1.position();\n      int drivetrainRightSideSpeed = Controller1.Axis3.position() - Controller1.Axis1.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable, Screen, spd;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Roller.setVelocity(80.0, percent);\n  while (true) {\n    if (Controller1.ButtonL1.pressing() && Controller1.ButtonL2.pressing()) {\n      Roller.setVelocity(100.0, percent);\n      Roller.spin(forward);\n    } else if (Controller1.ButtonL1.pressing()) {\n      Roller.setVelocity(80.0, percent);\n      Roller.spin(forward);\n    } else if (Controller1.ButtonL2.pressing()) {\n      Roller.setVelocity(80.0, percent);\n      Roller.spin(reverse);\n    } else {\n      Roller.stop();\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when started\" hat block\nint whenStarted2() {\n  Drivetrain.setTurnVelocity(50.0, percent);\n  return 0;\n}\n\n// \"when Controller1 ButtonY pressed\" hat block\nvoid onevent_Controller1ButtonY_pressed_0() {\n  Drivetrain.setDriveVelocity(100.0, percent);\n  spd = 100.0;\n}\n\n// \"when Controller1 ButtonX pressed\" hat block\nvoid onevent_Controller1ButtonX_pressed_0() {\n  Drivetrain.setDriveVelocity(70.0, percent);\n  spd = 70.0;\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToController1_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Controller1_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted3() {\n  Screen = 1.0;\n  while (true) {\n    if (Screen == 1.0) {\n      Brain.Screen.clearScreen();\n      Controller1.Screen.clearScreen();\n      Brain.Screen.print(\"Drive speed: \");\n      Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(spd));\n      Brain.Screen.newLine();\n      Controller1.Screen.print(\"Drive speed: \");\n      Controller1.Screen.print(printToController1_numberFormat(), static_cast<float>(spd));\n      Controller1.Screen.newLine();\n    }\n    else {\n      Brain.Screen.clearScreen();\n      Controller1.Screen.print(\"Screen off\");\n      Controller1.Screen.newLine();\n      Brain.Screen.print(\"Screen off\");\n      Brain.Screen.newLine();\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonY.pressed(onevent_Controller1ButtonY_pressed_0);\n  Controller1.ButtonX.pressed(onevent_Controller1ButtonX_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  vex::task ws1(whenStarted2);\n  vex::task ws2(whenStarted3);\n  whenStarted1();\n}","target":"Physical"}